"""empty message

Revision ID: 8f7dcde64369
Revises: 292c55e6398d
Create Date: 2024-05-12 03:52:56.632882

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "8f7dcde64369"
down_revision: Union[str, None] = "292c55e6398d"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "rooms",
        sa.Column("uuid", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column(
            "emotion",
            sa.Enum(
                "HAPPY", "SAD", "ANGER", "FEAR", "DISGUST", "NEUTRAL", name="emotion"
            ),
            nullable=False,
        ),
        sa.Column("summary", sa.Text(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("closed_at", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("uuid"),
    )
    op.create_index(op.f("ix_rooms_uuid"), "rooms", ["uuid"], unique=False)
    op.create_table(
        "messages",
        sa.Column("uuid", sa.String(), nullable=False),
        sa.Column("room_uuid", sa.String(), nullable=False),
        sa.Column("user_uuid", sa.String(), nullable=False),
        sa.Column("message", sa.Text(), nullable=False),
        sa.Column(
            "emotion",
            sa.Enum(
                "HAPPY", "SAD", "ANGER", "FEAR", "DISGUST", "NEUTRAL", name="emotion"
            ),
            nullable=False,
        ),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["room_uuid"],
            ["rooms.uuid"],
        ),
        sa.ForeignKeyConstraint(
            ["user_uuid"],
            ["users.uuid"],
        ),
        sa.PrimaryKeyConstraint("uuid"),
    )
    op.create_index(op.f("ix_messages_uuid"), "messages", ["uuid"], unique=False)
    op.create_table(
        "room_members",
        sa.Column("uuid", sa.String(), nullable=False),
        sa.Column("room_uuid", sa.String(), nullable=False),
        sa.Column("user_uuid", sa.String(), nullable=False),
        sa.Column("summary", sa.Text(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["room_uuid"],
            ["rooms.uuid"],
        ),
        sa.ForeignKeyConstraint(
            ["user_uuid"],
            ["users.uuid"],
        ),
        sa.PrimaryKeyConstraint("uuid"),
    )
    op.create_index(
        op.f("ix_room_members_uuid"), "room_members", ["uuid"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_room_members_uuid"), table_name="room_members")
    op.drop_table("room_members")
    op.drop_index(op.f("ix_messages_uuid"), table_name="messages")
    op.drop_table("messages")
    op.drop_index(op.f("ix_rooms_uuid"), table_name="rooms")
    op.drop_table("rooms")
    # ### end Alembic commands ###

    op.execute("DROP TYPE IF EXISTS emotion")
